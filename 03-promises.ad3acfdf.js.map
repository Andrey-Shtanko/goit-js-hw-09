{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACrCC,UAAWF,SAASC,cAAc,sBAChCE,OAAQH,SAASC,cAAc,wBACjCG,IAAKJ,SAASC,cAAc,WAE5B,IAAII,EACAC,EACAC,EACAC,EACAC,EAuEJ,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAoBtC,OAlBc,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,SAE3CA,MA/ELd,EAAKM,IAAIgB,iBAAiB,SAsB1B,SAAkBC,GAChBA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAIlB,EAAakB,GAAK,EACpCd,EAAWc,EAAE,EACH,IAANA,GACFf,EAAQF,EACRG,EAAWc,EAAE,EACbb,EAAcD,EAAUD,GAAOgB,MAAK,EAAGC,SAAAC,EAAUC,MAAAC,MAClDC,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAqBL,QAAiBE,UAEhEI,OAAM,EAAGP,SAAAQ,EAAUN,MAAAO,MACjBL,EAAAjC,GAASkC,OAAOK,QAAQ,sBAAoBF,QAAiBC,YAG5D1B,EAAQF,EAAkBC,EAAegB,EACzCb,EAAcD,EAAUD,GAAOgB,MAAK,EAAGC,SAAAW,EAAUT,MAAAU,MACnDR,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAqBK,QAAiBC,UAE/DL,OAAM,EAAGP,SAAAa,EAAUX,MAAAY,MAClBV,EAAAjC,GAASkC,OAAOK,QAAQ,sBAAoBG,QAAiBC,cAvCjEzC,EAAKK,OAAOiB,iBAAiB,SAAUC,IACvChB,EAAcmC,OAAOnB,EAAMoB,OAAOC,OAEzBrC,KAGTP,EAAKC,WAAWqB,iBAAiB,SAAUC,IAC3Cf,EAAkBkC,OAAOnB,EAAMoB,OAAOC,OAE7BpC,KAGTR,EAAKI,UAAUkB,iBAAiB,SAAUC,IAC1Cd,EAAiBiC,OAAOnB,EAAMoB,OAAOC,OAE5BnC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  firstDelay: document.querySelector(`input[name=\"delay\"]`),\ndelayStep: document.querySelector(`input[name=\"step\"]`),\n  amount: document.querySelector(`input[name=\"amount\"]`),\nbtn: document.querySelector(`button`),\n}\nlet inputAmount\nlet inputFirstDelay\nlet inputDelayStep\nlet delay\nlet position\n\nrefs.btn.addEventListener(`click`, onSubmit)\n\nrefs.amount.addEventListener(`input`, (event) => {\ninputAmount = Number(event.target.value);\n  // console.log(inputAmount);\n  return inputAmount\n})\n\nrefs.firstDelay.addEventListener(`input`, (event) => {\ninputFirstDelay = Number(event.target.value);\n  \n  return inputFirstDelay\n})\n\nrefs.delayStep.addEventListener(`input`, (event) => {\ninputDelayStep = Number(event.target.value);\n  // console.log(inputDelayStep);\n  return inputDelayStep\n})\n\n\n\nfunction onSubmit(event) {\n  event.preventDefault()\n  for (let i = 0; i < inputAmount; i += 1) {\n    position = i+1\n    if (i === 0) {\n      delay = inputFirstDelay\n      position = i+1\n      createPromise(position, delay).then(({ position, delay }) => {\n     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    } else {\n      delay = inputFirstDelay + inputDelayStep*i\n      createPromise(position, delay).then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    }\n    \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n// createPromise(2, 1500)\n  // .then(({ position, delay }) => {\n  //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // })\n  // .catch(({ position, delay }) => {\n  //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  // });\n\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n});\n\n\n\n  // if (shouldResolve) {\n  //   // Fulfill\n  // } else {\n  //   // Reject\n  // }\n  // // Notiflix.Notify.info(`position: ${position} delay: ${delay} `);\n  return promise\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","firstDelay","document","querySelector","delayStep","amount","btn","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$inputFirstDelay","$47d4ff9957288465$var$inputDelayStep","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","position5","delay5","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","i","then","position","position1","delay","delay1","$parcel$interopDefault","Notify","success","catch","position2","delay2","failure","position3","delay3","position4","delay4","Number","target","value"],"version":3,"file":"03-promises.ad3acfdf.js.map"}